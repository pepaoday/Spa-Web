@model DoAnPhanMem.Models.DICHVU

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmi.cshtml";
}

<h2>Tạo Dịch Vụ</h2>

<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
<style>
    .form-control {
        border: 1px solid !important;
    }

    .form-horizontal {
        padding: 20px;
        border: 1px dashed;
        border-radius: 10px;
    }

    .btn-default {
        background-color: #007bff;
        color: white;
        border: none;
    }

        .btn-default:hover {
            background-color: #0056b3;
            color: white;
        }

    .text-danger {
        color: #dc3545;
    }

    img {
        max-width: 200px;
        max-height: 200px;
    }
</style>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Dịch Vụ</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.TENDV, "Tên Dịch Vụ", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.TENDV, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TENDV, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.MOTA, "Mô Tả", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.MOTA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MOTA, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.GIA, "Giá", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.GIA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GIA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.IMG, "Ảnh", htmlAttributes: new { @class = "control-label" })
                <input type="file" name="uploadIMG" id="uploadIMG" class="form-control" />
                <br />
                <img id="previewIMG" src="#" alt="Ảnh đã chọn" style="display:none;" />
                @Html.ValidationMessageFor(model => model.IMG, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.IMG2, "Ảnh 2", htmlAttributes: new { @class = "control-label" })
                <input type="file" name="uploadIMG2" id="uploadIMG2" class="form-control" />
                <br />
                <img id="previewIMG2" src="#" alt="Ảnh đã chọn" style="display:none;" />
                @Html.ValidationMessageFor(model => model.IMG2, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.IMG3, "Ảnh 3", htmlAttributes: new { @class = "control-label" })
                <input type="file" name="uploadIMG3" id="uploadIMG3" class="form-control" />
                <br />
                <img id="previewIMG3" src="#" alt="Ảnh đã chọn" style="display:none;" />
                @Html.ValidationMessageFor(model => model.IMG3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.TONGDANHGIA, "Tổng Đánh Giá", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.TONGDANHGIA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TONGDANHGIA, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.GIAMGIA, "Giảm Giá", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.GIAMGIA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GIAMGIA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.IDDM, "Danh Mục", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.IDDM, (SelectList)ViewBag.IDDM, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDDM, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.DONVITINH, "Đơn Vị Tính", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.DONVITINH, (SelectList)ViewBag.DONVITINH, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DONVITINH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group text-right">
            <div class="col-md-12">
                <input type="submit" value="Tạo Mới" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Quay lại danh sách", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function previewImage(input, imgPreviewId) {
            var file = input.files[0];
            var reader = new FileReader();

            reader.onload = function(e) {
                var img = document.getElementById(imgPreviewId);
                img.src = e.target.result;
                img.style.display = 'block';  // Hiển thị ảnh
            }

            if (file) {
                reader.readAsDataURL(file);
            }
        }

        document.getElementById('uploadIMG').addEventListener('change', function() {
            previewImage(this, 'previewIMG');
        });

        document.getElementById('uploadIMG2').addEventListener('change', function() {
            previewImage(this, 'previewIMG2');
        });

        document.getElementById('uploadIMG3').addEventListener('change', function() {
            previewImage(this, 'previewIMG3');
        });
    </script>
}
